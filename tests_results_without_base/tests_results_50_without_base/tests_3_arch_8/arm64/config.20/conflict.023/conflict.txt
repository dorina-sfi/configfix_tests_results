MEMCPY_KUNIT_TEST: y => no
      Direct dependencies: RUNTIME_TESTING_MENU [=y] && KUNIT [=y]

CRC_T10DIF: y => no
      Direct dependencies: y
      Reverse dependencies: BLK_DEV_INTEGRITY_T10 [=y] && BLOCK [=y] && BLK_DEV_INTEGRITY [=y] || TARGET_CORE [=n] && BLOCK [=y] || SCSI_LPFC [=n] && SCSI_LOWLEVEL [=y] && PCI [=n] && SCSI [=y] && CPU_FREQ [=y] && SCSI_FC_ATTRS [=y] && (NVME_TARGET_FC [=y] || NVME_TARGET_FC [=y]=n) && (NVME_FC [=y] || NVME_FC [=y]=n) || SCSI_EFCT [=n] && SCSI_LOWLEVEL [=y] && PCI [=n] && SCSI [=y] && TARGET_CORE [=n] && SCSI_FC_ATTRS [=y] || SCSI_DEBUG [=y] && SCSI_LOWLEVEL [=y] && SCSI [=y]

DEBUG_SPINLOCK: y => no
      Direct dependencies: DEBUG_KERNEL [=y]
      Reverse dependencies: PROVE_LOCKING [=y] && DEBUG_KERNEL [=y] && LOCK_DEBUGGING_SUPPORT [=y] || LOCK_STAT [=y] && DEBUG_KERNEL [=y] && LOCK_DEBUGGING_SUPPORT [=y] || DEBUG_WW_MUTEX_SLOWPATH [=y] && DEBUG_KERNEL [=y] && LOCK_DEBUGGING_SUPPORT [=y] || DEBUG_LOCK_ALLOC [=y] && DEBUG_KERNEL [=y] && LOCK_DEBUGGING_SUPPORT [=y]

B53: y => no
      Direct dependencies: NETDEVICES [=y] && NET_DSA [=y]
      Reverse dependencies: NET_DSA_BCM_SF2 [=y] && NETDEVICES [=y] && NET_DSA [=y] && HAS_IOMEM [=y]

CRYPTO_DEV_ATMEL_SHA: y => no
      Direct dependencies: CRYPTO [=y] && CRYPTO_HW [=y] && (ARCH_AT91 || COMPILE_TEST [=y])
      Reverse dependencies: CRYPTO_DEV_ATMEL_AES [=y] && CRYPTO [=y] && CRYPTO_HW [=y] && (ARCH_AT91 || COMPILE_TEST [=y]) && CRYPTO_DEV_ATMEL_AUTHENC [=y]

PROC_CHILDREN: y => no
      Direct dependencies: y
      Reverse dependencies: CHECKPOINT_RESTORE [=y]

I2C_MUX: y => no
      Direct dependencies: I2C [=y]
      Reverse dependencies: MEDIA_SUBDRV_AUTOSELECT [=n] && MEDIA_SUPPORT [=n] && HAS_IOMEM [=y] || DRM_SII902X [=y] && HAS_IOMEM [=y] && DRM [=y] && DRM_BRIDGE [=y] && OF [=y] || MPU3050_I2C [=n] && IIO [=n] && I2C [=y] || INV_MPU6050_I2C [=n] && IIO [=n] && I2C [=y]

NET_DSA_TAG_QCA: y => no
      Direct dependencies: NET [=y] && NET_DSA [=y]
      Reverse dependencies: NET_DSA_QCA8K [=y] && NETDEVICES [=y] && NET_DSA [=y]

